// <auto-generated />
using System;
using DataL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataL.Migrations
{
    [DbContext(typeof(WeatherContext))]
    [Migration("20200209184349_Initial40")]
    partial class Initial40
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DataL.Entityes.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdCity");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("DataL.Entityes.Clouds", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("All");

                    b.HasKey("Id");

                    b.ToTable("Clouds");
                });

            modelBuilder.Entity("DataL.Entityes.JsResponse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PushMessage");

                    b.Property<int>("RespIdCity");

                    b.Property<string>("Response");

                    b.HasKey("Id");

                    b.ToTable("JsResponses");
                });

            modelBuilder.Entity("DataL.Entityes.Main", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Humidity");

                    b.Property<double>("Pressure");

                    b.Property<double>("Temp");

                    b.Property<double>("TempMax");

                    b.Property<double>("TempMin");

                    b.HasKey("Id");

                    b.ToTable("Main");
                });

            modelBuilder.Entity("DataL.Entityes.PushMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MesCooling");

                    b.Property<string>("MesWarming");

                    b.HasKey("Id");

                    b.ToTable("PushMessages");
                });

            modelBuilder.Entity("DataL.Entityes.Sys", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country");

                    b.Property<int>("IdSys");

                    b.Property<double>("Message");

                    b.Property<double>("Sunrise");

                    b.Property<double>("Sunset");

                    b.Property<double>("Type");

                    b.HasKey("Id");

                    b.ToTable("Sys");
                });

            modelBuilder.Entity("DataL.Entityes.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DeviceName");

                    b.Property<string>("UserIdCity");

                    b.Property<string>("UserKey");

                    b.Property<string>("UserNameCity");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DataL.Entityes.Weather", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Icon");

                    b.Property<int>("IdWeather");

                    b.Property<string>("Main");

                    b.Property<int?>("WeatherResponseId");

                    b.HasKey("Id");

                    b.HasIndex("WeatherResponseId");

                    b.ToTable("Weathers");
                });

            modelBuilder.Entity("DataL.Entityes.WeatherResponse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Base");

                    b.Property<int?>("CloudsId");

                    b.Property<double>("Cod");

                    b.Property<double>("Dt");

                    b.Property<int>("IdCity");

                    b.Property<int?>("MainId");

                    b.Property<string>("Name");

                    b.Property<string>("PushMessage");

                    b.Property<int?>("SysId");

                    b.Property<double>("Visibility");

                    b.Property<int?>("WindId");

                    b.HasKey("Id");

                    b.HasIndex("CloudsId");

                    b.HasIndex("MainId");

                    b.HasIndex("SysId");

                    b.HasIndex("WindId");

                    b.ToTable("WeatherResponses");
                });

            modelBuilder.Entity("DataL.Entityes.Wind", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Deg");

                    b.Property<double>("Speed");

                    b.HasKey("Id");

                    b.ToTable("Winds");
                });

            modelBuilder.Entity("DataL.Entityes.Weather", b =>
                {
                    b.HasOne("DataL.Entityes.WeatherResponse")
                        .WithMany("Weather")
                        .HasForeignKey("WeatherResponseId");
                });

            modelBuilder.Entity("DataL.Entityes.WeatherResponse", b =>
                {
                    b.HasOne("DataL.Entityes.Clouds", "Clouds")
                        .WithMany()
                        .HasForeignKey("CloudsId");

                    b.HasOne("DataL.Entityes.Main", "Main")
                        .WithMany()
                        .HasForeignKey("MainId");

                    b.HasOne("DataL.Entityes.Sys", "Sys")
                        .WithMany()
                        .HasForeignKey("SysId");

                    b.HasOne("DataL.Entityes.Wind", "Wind")
                        .WithMany()
                        .HasForeignKey("WindId");
                });
#pragma warning restore 612, 618
        }
    }
}
